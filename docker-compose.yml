services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: excel_unified
      POSTGRES_PASSWORD: excel_unified_password
      POSTGRES_DB: excel_unified_development
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U excel_unified"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rails:
    build:
      context: ./rails-app
      dockerfile: Dockerfile.dev
      args:
        RUBY_VERSION: 3.4.5
    command: bash -c "bin/vite dev & ./bin/rails-server"
    volumes:
      - ./rails-app:/rails
      - bundle_cache:/usr/local/bundle
      - node_modules:/rails/node_modules
      - tmp_storage:/rails/tmp
      - log_storage:/rails/log
    ports:
      - "3000:3000"
      - "3037:3037"
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://excel_unified:excel_unified_password@postgres:5432/excel_unified_development
      REDIS_URL: redis://redis:6379/0
      PYTHON_SERVICE_URL: http://python:8000
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_SERVE_STATIC_FILES: "true"
      DOCKERIZED: "true"
      VITE_RUBY_HOST: 0.0.0.0
      VITE_RUBY_MODE: development
      NODE_ENV: development
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      python:
        condition: service_healthy
    stdin_open: true
    tty: true

  sidekiq:
    build:
      context: ./rails-app
      dockerfile: Dockerfile.dev
    command: bundle exec sidekiq
    volumes:
      - ./rails-app:/rails
      - bundle_cache:/usr/local/bundle
      - tmp_storage:/rails/tmp
      - log_storage:/rails/log
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://excel_unified:excel_unified_password@postgres:5432/excel_unified_development
      REDIS_URL: redis://redis:6379/0
      PYTHON_SERVICE_URL: http://python:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  python:
    build:
      context: ./python-service
      dockerfile: Dockerfile
    volumes:
      - ./python-service:/app
      - python_cache:/root/.cache
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://excel_unified:excel_unified_password@postgres:5432/excel_unified_development
      REDIS_URL: redis://redis:6379/0
      PYTHONUNBUFFERED: 1
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  collabora:
    image: collabora/code:latest
    container_name: collabora
    # Remove direct port mapping - only accessible through proxy
    # ports:
    #   - "9980:9980"
    environment:
      # host.docker.internal은 Docker가 호스트 머신을 참조할 수 있도록 하는 특수 DNS
      - aliasgroup1=http://host.docker.internal:3000
      # 사이드바 비활성화를 위한 추가 파라미터
      - extra_params=--o:ssl.enable=false --o:ssl.termination=false --o:net.proto=IPv4 --o:net.service_root= --o:security.capabilities=false --o:user_interface.use_sidebar=false --o:per_view.ui_defaults.spreadsheet.sidebar_visible=false --o:per_view.ui_defaults.text.sidebar_visible=false --o:per_view.ui_defaults.presentation.sidebar_visible=false --o:feature_lock.is_lock_ui=".uno:Sidebar" --o:logging.level=warning
      - username=admin
      - password=admin123
      # 추가 UI 설정
      - dictionaries=en_US ko_KR
    volumes:
      # 커스텀 설정 파일 마운트
      - ./rails-app/collabora-config/coolwsd.xml:/etc/coolwsd/coolwsd.xml:ro
    cap_add:
      - MKNOD
    extra_hosts:
      # Docker Desktop on Mac/Windows automatically provides host.docker.internal
      # For Linux, we need to add it manually
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9980"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx proxy for Collabora to handle hash-based URLs and replace direct access
  collabora-proxy:
    image: nginx:alpine
    volumes:
      - ./rails-app/collabora-nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "9980:9981"  # Map host 9980 to container 9981 (proxy)
      - "9981:9981"  # Keep original proxy port
    depends_on:
      - collabora
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  bundle_cache:
  node_modules:
  python_cache:
  tmp_storage:
  log_storage:

networks:
  default:
    name: excel_unified_network
